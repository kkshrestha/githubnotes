-------or create a new repository on the command line----------------
echo "# githubnotes" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/kkshrestha/githubnotes.git
git push -u origin main

----or push an existing repository from the command line----

git remote add origin https://github.com/kkshrestha/githubnotes.git
git branch -M main
git push -u origin main

----if unable to push--
git pull origin main
git fetch origin main:tmp
git rebase tmp
git push origin HEAD:main
git push -u orignin main
git commit -m "krishna"

----error resolved-----
PS D:\Python\fontawesome\get> git status
On branch master

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        index.html

nothing added to commit but untracked files present (use "git add" to track)
PS D:\Python\fontawesome\get> git add .
PS D:\Python\fontawesome\get> git status

No commits yet

        new file:   index.html

PS D:\Python\fontawesome\get> git commit -m "KRISHNA"
[master (root-commit) 4b2ba01] KRISHNA
 1 file changed, 12 insertions(+)
 create mode 100644 index.html
PS D:\Python\fontawesome\get> git config --global user.name"krishna"
PS D:\Python\fontawesome\get> git config --gloabal user.email"krishnakumarshresthaa@gmail.com"
error: unknown option `gloabal'
usage: git config [<options>]

Config file location
    --[no-]global         use global config file
    --[no-]system         use system config file
    --[no-]local          use repository config file
    --[no-]worktree       use per-worktree config file
    -f, --[no-]file <file>
                          use given config file
    --[no-]blob <blob-id> read config from given blob object

Action
    --[no-]get            get value: name [value-pattern]
    --[no-]get-all        get all values: key [value-pattern]
    --[no-]get-regexp     get values for regexp: name-regex [value-pattern]
    --[no-]get-urlmatch   get value specific for the URL: section[.var] URL
    --[no-]replace-all    replace all matching variables: name value [value-pattern]
    --[no-]add            add a new variable: name value
    --[no-]unset          remove a variable: name [value-pattern]
    --[no-]unset-all      remove all matches: name [value-pattern]
    --[no-]rename-section rename section: old-name new-name
    --[no-]remove-section remove a section: name
    -l, --[no-]list       list all
    --[no-]fixed-value    use string equality when comparing values to 'value-pattern'
    -e, --[no-]edit       open an editor
    --[no-]get-color      find the color configured: slot [default]
    --[no-]get-colorbool  find the color setting: slot [stdout-is-tty]

Type
    -t, --[no-]type <type>
                          value is given this type
    --bool                value is "true" or "false"
    --int                 value is decimal number
    --bool-or-int         value is --bool or --int
    --bool-or-str         value is --bool or string
    --path                value is a path (file or directory name)
    --expiry-date         value is an expiry date

Other
    --[no-]show-origin    show origin of config (file, standard input, blob, command line)
    --[no-]show-scope     show scope of config (worktree, local, global, system, command)
PS D:\Python\fontawesome\get> git config --global user.name"krishna"
PS D:\Python\fontawesome\get> git config --global user.email"krishnakumarshresthaa@gmail.com" 
PS D:\Python\fontawesome\get> git commit -m "krishna"
On branch master
nothing to commit, working tree clean
PS D:\Python\fontawesome\get> git branch -m main
PS D:\Python\fontawesome\get> git remote add origin https://github.com/kkshrestha/pyproject.git
PS D:\Python\fontawesome\get> git push -u origin main
 ! [rejected]        main -> main (fetch first)
error: failed to push some refs to 'https://github.com/kkshrestha/pyproject.git'
hint: Updates were rejected because the remote contains work that you do not
hint: have locally. This is usually caused by another repository pushing to
hint: the same ref. If you want to integrate the remote changes, use
hint: 'git pull' before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.
PS D:\Python\fontawesome\get> git pull
remote: Enumerating objects: 3, done.
remote: Counting objects: 100% (3/3), done.
remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
Unpacking objects: 100% (3/3), 903 bytes | 7.00 KiB/s, done.
From https://github.com/kkshrestha/pyproject
 * [new branch]      main       -> origin/main
There is no tracking information for the current branch.
Please specify which branch you want to merge with.

    git pull <remote> <branch>


    git branch --set-upstream-to=origin/<branch> main

PS D:\Python\fontawesome\get> git pull origin main
From https://github.com/kkshrestha/pyproject
fatal: refusing to merge unrelated histories
Cloning into 'pyproject'...
remote: Enumerating objects: 3, done.
Receiving objects: 100% (3/3), done.
* main
PS D:\Python\fontawesome\get> git branch -a
* main
PS D:\Python\fontawesome\get> git branch checkout main
PS D:\Python\fontawesome\get> git branch -
fatal: '-' is not a valid branch name
PS D:\Python\fontawesome\get> git branch -a
  checkout
* main
PS D:\Python\fontawesome\get> git status
On branch main
Untracked files:
  (use "git add <file>..." to include in what will be committed)

nothing added to commit but untracked files present (use "git add" to track)
PS D:\Python\fontawesome\get> git add
Nothing specified, nothing added.
hint: Maybe you wanted to say 'git add .'?
hint: Turn this message off by running
hint: "git config advice.addEmptyPathspec false"
PS D:\Python\fontawesome\get> git add .
warning: adding embedded git repository: pyproject
hint: You've added another git repository inside your current repository.
hint: Clones of the outer repository will not contain the contents of
hint: the embedded repository and will not know how to obtain it.
hint: If you meant to add a submodule, use:
hint: 
hint: If you added this path by mistake, you can remove it from the
hint: index with:
hint: 
hint: 
hint: See "git help submodule" for more information.
PS D:\Python\fontawesome\get> git add .
PS D:\Python\fontawesome\get> git commit -m "krishna"
[main 36f988c] krishna
 1 file changed, 1 insertion(+)
 create mode 160000 pyproject
anges,                            push origin main
hint: use 'git pull' before pushinyproject.gitg again.                          (non-fast-forward)
hint: See the 'Note about fast-for 'https://github.com/kkshrestha/pyproject.git'wards' in 'git push --help' for dee the tip of your current branch is behindtails.                            ou want to integrate the remote changes,
PS D:\Python\fontawesome\get> git g again.
push --force-with-lease           wards' in 'git push --help' for details.
fatal: The current branch main has no upstream branch.
To push the current branch and set the remote as upstream, use      


To have this happen automatically for branches without a tracking

PS D:\Python\fontawesome\get> git fetch origin main:tmp
From https://github.com/kkshrestha/pyproject
 * [new branch]      main       -> tmp
PS D:\Python\fontawesome\get> git rebase tmp
warning: unable to rmdir 'pyproject': Directory not empty
Successfully rebased and updated refs/heads/main.
PS D:\Python\fontawesome\get> git push origin HEAD:main
Enumerating objects: 6, done.
Delta compression using up to 4 threads
Writing objects: 100% (5/5), 687 bytes | 229.00 KiB/s, done.
Total 5 (delta 1), reused 0 (delta 0), pack-reused 0 (from 0)
remote: Resolving deltas: 100% (1/1), done.
To https://github.com/kkshrestha/pyproject.git
   1e773da..23b936f  HEAD -> main
Deleted branch tmp (was 1e773da).
PS D:\Python\fontawesome\get> git push -u orignin main
fatal: Could not read from remote repository.
Please make sure you have the correct access rights
and the repository exists.
PS D:\Python\fontawesome\get> git push -u origin main
branch 'main' set up to track 'origin/main'.
Everything up-to-date
PS D:\Python\fontawesome\get> git init
Reinitialized existing Git repository in D:/Python/fontawesome/get/.git/
PS D:\Python\fontawesome\get> git status
On branch main
Your branch is up to date with 'origin/main'.
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
  (commit or discard the untracked or modified content in submodules)
        modified:   pyproject (untracked content)

no changes added to commit (use "git add" and/or "git commit -a")
PS D:\Python\fontawesome\get> git add .
PS D:\Python\fontawesome\get> git commit -m "krishna"
On branch main
Your branch is up to date with 'origin/main'.
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
  (commit or discard the untracked or modified content in submodules)
        modified:   pyproject (untracked content)

no changes added to commit (use "git add" and/or "git commit -a")
PS D:\Python\fontawesome\get> git push -u origin main
branch 'main' set up to track 'origin/main'.
Everything up-to-date
PS D:\Python\fontawesome\get>
---------------------------------------------------